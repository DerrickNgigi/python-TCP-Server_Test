CHECK IF THE PORTS ARE OPEN

sudo lsof -i -P -n | grep LISTEN
sudo netstat -tulpn | grep LISTEN

Kill a process on the port
sudo fuser -k 8000/tcp


### Keep the code for later use.
# def handle_client(client_socket):
#     request = client_socket.recv(1024)
#     print("Received: ", request)

#     #send acknoledgement
#     data = "ACK!".encode('utf-8')
#     client_socket.send(data)

# while True:
#     #Wait for a connection
#     connection, client_addr = sock.accept()
#     print("Received connection from:", client_addr)

#     #Create a thread to handle the client  
#     client_handler = threading.Thread(target=handle_clien, args=(connection))
#     client_handler.start()



# def client_program():
#     host = socket.gethostname()  # as both code is running on same pc
#     port = 5000  # socket server port number

#     client_socket = socket.socket()  # instantiate
#     client_socket.connect((host, port))  # connect to the server

#     message = input(" -> ")  # take input

#     while message.lower().strip() != 'bye':
#         client_socket.send(message.encode())  # send message
#         data = client_socket.recv(1024).decode()  # receive response

#         print('Received from server: ' + data)  # show in terminal

#         message = input(" -> ")  # again take input

#     client_socket.close()  # close the connection


# if __name__ == '__main__':
#     client_program()



####This is code 

conn, client_address = sock.accept() #Accept the connection

with conn: 
    print("Connected to", client_address)

    while True:
        data = conn.recv(1024)
        print("From Connected User: ", str(data))
        # data = input(" -> ")
        message = "data received"
        # if not message:
        #     break
        conn.sendall(message.encode())
        sock.close()
        break



Research Materials

file:///C:/Users/Derrick/Downloads/Documents/Python%20Cookbook_%20Recipes%20for%20Mastering%20Python%203%20(%20PDFDrive%20).pdf
Python CookBook 3 -> Download Copy version 2015



